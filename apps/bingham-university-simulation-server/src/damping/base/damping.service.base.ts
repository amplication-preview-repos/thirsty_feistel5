/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Damping as PrismaDamping } from "@prisma/client";

export class DampingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DampingCountArgs, "select">): Promise<number> {
    return this.prisma.damping.count(args);
  }

  async dampings(args: Prisma.DampingFindManyArgs): Promise<PrismaDamping[]> {
    return this.prisma.damping.findMany(args);
  }
  async damping(
    args: Prisma.DampingFindUniqueArgs
  ): Promise<PrismaDamping | null> {
    return this.prisma.damping.findUnique(args);
  }
  async createDamping(args: Prisma.DampingCreateArgs): Promise<PrismaDamping> {
    return this.prisma.damping.create(args);
  }
  async updateDamping(args: Prisma.DampingUpdateArgs): Promise<PrismaDamping> {
    return this.prisma.damping.update(args);
  }
  async deleteDamping(args: Prisma.DampingDeleteArgs): Promise<PrismaDamping> {
    return this.prisma.damping.delete(args);
  }
}
