/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Time as PrismaTime } from "@prisma/client";

export class TimeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.TimeCountArgs, "select">): Promise<number> {
    return this.prisma.time.count(args);
  }

  async times(args: Prisma.TimeFindManyArgs): Promise<PrismaTime[]> {
    return this.prisma.time.findMany(args);
  }
  async time(args: Prisma.TimeFindUniqueArgs): Promise<PrismaTime | null> {
    return this.prisma.time.findUnique(args);
  }
  async createTime(args: Prisma.TimeCreateArgs): Promise<PrismaTime> {
    return this.prisma.time.create(args);
  }
  async updateTime(args: Prisma.TimeUpdateArgs): Promise<PrismaTime> {
    return this.prisma.time.update(args);
  }
  async deleteTime(args: Prisma.TimeDeleteArgs): Promise<PrismaTime> {
    return this.prisma.time.delete(args);
  }
}
