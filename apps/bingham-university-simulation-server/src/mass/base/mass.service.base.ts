/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Mass as PrismaMass } from "@prisma/client";

export class MassServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.MassCountArgs, "select">): Promise<number> {
    return this.prisma.mass.count(args);
  }

  async masses(args: Prisma.MassFindManyArgs): Promise<PrismaMass[]> {
    return this.prisma.mass.findMany(args);
  }
  async mass(args: Prisma.MassFindUniqueArgs): Promise<PrismaMass | null> {
    return this.prisma.mass.findUnique(args);
  }
  async createMass(args: Prisma.MassCreateArgs): Promise<PrismaMass> {
    return this.prisma.mass.create(args);
  }
  async updateMass(args: Prisma.MassUpdateArgs): Promise<PrismaMass> {
    return this.prisma.mass.update(args);
  }
  async deleteMass(args: Prisma.MassDeleteArgs): Promise<PrismaMass> {
    return this.prisma.mass.delete(args);
  }
}
